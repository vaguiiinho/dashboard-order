version: '3.8'

# Docker Compose padrão - aponta para desenvolvimento
# Use: docker-compose up para desenvolvimento
# Use: docker-compose -f docker-compose.prod.yml up para produção

services:
  # Database MySQL
  mysql:
    image: mysql:8.0
    container_name: dashboard-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-dashboard_orders}
      MYSQL_USER: ${MYSQL_USER:-dashboard_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-dashboard_pass123}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - dashboard-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Backend NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: dashboard-backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USERNAME: ${MYSQL_USER:-dashboard_user}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD:-dashboard_pass123}
      DATABASE_NAME: ${MYSQL_DATABASE:-dashboard_orders}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-key-change-in-production}
      API_PORT: ${API_PORT:-3001}
      EXTERNAL_API_URL: ${EXTERNAL_API_URL:-http://localhost:8000}
    ports:
      - "${API_PORT:-3001}:3001"
    volumes:
      # Volume condicional para desenvolvimento
      - ./backend:/app:cached
      - /app/node_modules
    depends_on:
      - mysql
    networks:
      - dashboard-network
    restart: unless-stopped

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: dashboard-frontend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXT_PUBLIC_APP_ENV: ${NODE_ENV:-development}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      # Volume condicional para desenvolvimento
      - ./frontend:/app:cached
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - dashboard-network
    restart: unless-stopped

  # phpMyAdmin (apenas desenvolvimento)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2
    container_name: dashboard-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-dashboard_user}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-dashboard_pass123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    depends_on:
      - mysql
    networks:
      - dashboard-network
    restart: unless-stopped
    profiles:
      - dev
      - development

volumes:
  mysql_data:
    driver: local

networks:
  dashboard-network:
    driver: bridge
